[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform int width : hint_range(0, 16) = 1;
uniform vec4 outline_color : hint_color = vec4(0.0, 0.0, 0.0, 1.0);
 
void fragment()
{
	vec2 unit = TEXTURE_PIXEL_SIZE;
	vec4 pixel_color = texture(TEXTURE, UV);
	if (pixel_color.a == 0.0) {
		pixel_color = outline_color;
		pixel_color.a = 0.0;
		for (int x = -width; x <= width; x++) {
				if (texture(TEXTURE, UV + vec2(float(x)*unit.x,0)).a == 0.0) {
					continue;
				}
				pixel_color.a = outline_color.a;
		}
		for (int y = -width; y <= width; y++) {
				if (texture(TEXTURE, UV + vec2(0,float(y)*unit.y)).a == 0.0) {
					continue;
				}
				pixel_color.a = outline_color.a;
		}
	}
	COLOR = pixel_color;
}"

[resource]
shader = SubResource( 1 )
shader_param/width = 3
shader_param/outline_color = Color( 0.168627, 0.168627, 0.168627, 1 )
